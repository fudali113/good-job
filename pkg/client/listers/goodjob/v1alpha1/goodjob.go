/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/fudali113/good-job/pkg/apis/goodjob/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// GoodJobLister helps list GoodJobs.
type GoodJobLister interface {
	// List lists all GoodJobs in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.GoodJob, err error)
	// GoodJobs returns an object that can list and get GoodJobs.
	GoodJobs(namespace string) GoodJobNamespaceLister
	GoodJobListerExpansion
}

// goodJobLister implements the GoodJobLister interface.
type goodJobLister struct {
	indexer cache.Indexer
}

// NewGoodJobLister returns a new GoodJobLister.
func NewGoodJobLister(indexer cache.Indexer) GoodJobLister {
	return &goodJobLister{indexer: indexer}
}

// List lists all GoodJobs in the indexer.
func (s *goodJobLister) List(selector labels.Selector) (ret []*v1alpha1.GoodJob, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.GoodJob))
	})
	return ret, err
}

// GoodJobs returns an object that can list and get GoodJobs.
func (s *goodJobLister) GoodJobs(namespace string) GoodJobNamespaceLister {
	return goodJobNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// GoodJobNamespaceLister helps list and get GoodJobs.
type GoodJobNamespaceLister interface {
	// List lists all GoodJobs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.GoodJob, err error)
	// Get retrieves the GoodJob from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.GoodJob, error)
	GoodJobNamespaceListerExpansion
}

// goodJobNamespaceLister implements the GoodJobNamespaceLister
// interface.
type goodJobNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all GoodJobs in the indexer for a given namespace.
func (s goodJobNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.GoodJob, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.GoodJob))
	})
	return ret, err
}

// Get retrieves the GoodJob from the indexer for a given namespace and name.
func (s goodJobNamespaceLister) Get(name string) (*v1alpha1.GoodJob, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("goodjob"), name)
	}
	return obj.(*v1alpha1.GoodJob), nil
}
